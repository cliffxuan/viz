{"version":3,"sources":["Tree.tsx","parser.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["spec","parse","graph","nameToId","id","pairs","split","map","row","reduce","concat","p","trim","filter","chain","nodes","x","zip","slice","Infinity","toPairs","tree","uniq","parent","child","parentId","undefined","push","name","childId","useStyles","makeStyles","theme","createStyles","root","height","display","flexDirection","appBar","backgroundColor","color","saveButton","marginLeft","spacing","main","flexGrow","overflow","padding","pane","paper","palette","text","secondary","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","path","render","match","GraphContainer","docId","params","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","useState","data","setData","redirect","setRedirect","useEffect","a","collection","doc","get","exists","replace","fetchDoc","to","Graph","handleChange","handleSave","set","classes","size","className","AppBar","position","Toolbar","Typography","variant","Button","onClick","Grid","container","item","xs","md","Paper","square","Vega","treeSpec","mode","placeholder","onChange","value","width","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4a6e624.chunk.js","sourcesContent":["import { Spec } from 'vega';\n\nconst spec: Spec = {\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"description\": \"An example of Cartesian layouts for a node-link diagram of hierarchical data.\",\n  \"width\": 600,\n  \"height\": 1600,\n  \"padding\": 5,\n\n  \"signals\": [],\n\n  \"data\": [\n    {\n      \"name\": \"tree\",\n      \"transform\": [\n        {\n          \"type\": \"stratify\",\n          \"key\": \"id\",\n          \"parentKey\": \"parent\"\n        },\n        {\n          \"type\": \"tree\",\n          \"method\": \"tidy\",\n          \"size\": [{\"signal\": \"height\"}, {\"signal\": \"width - 100\"}],\n          \"separation\": false,\n          \"as\": [\"y\", \"x\", \"depth\", \"children\"]\n        }\n      ]\n    },\n    {\n      \"name\": \"links\",\n      \"source\": \"tree\",\n      \"transform\": [\n        { \"type\": \"treelinks\" },\n        {\n          \"type\": \"linkpath\",\n          \"orient\": \"horizontal\",\n          \"shape\": \"diagonal\"\n        }\n      ]\n    }\n  ],\n\n  \"scales\": [\n    {\n      \"name\": \"color\",\n      \"type\": \"linear\",\n      \"range\": {\"scheme\": \"magma\"},\n      \"domain\": {\"data\": \"tree\", \"field\": \"depth\"},\n      \"zero\": true\n    }\n  ],\n\n  \"marks\": [\n    {\n      \"type\": \"path\",\n      \"from\": {\"data\": \"links\"},\n      \"encode\": {\n        \"update\": {\n          \"path\": {\"field\": \"path\"},\n          \"stroke\": {\"value\": \"#ccc\"}\n        }\n      }\n    },\n    {\n      \"type\": \"symbol\",\n      \"from\": {\"data\": \"tree\"},\n      \"encode\": {\n        \"enter\": {\n          \"size\": {\"value\": 100},\n          \"stroke\": {\"value\": \"#fff\"}\n        },\n        \"update\": {\n          \"x\": {\"field\": \"x\"},\n          \"y\": {\"field\": \"y\"},\n          \"fill\": {\"scale\": \"color\", \"field\": \"depth\"}\n        }\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"from\": {\"data\": \"tree\"},\n      \"encode\": {\n        \"enter\": {\n          \"text\": {\"field\": \"name\"},\n          \"fontSize\": {\"value\": 9},\n          \"baseline\": {\"value\": \"middle\"}\n        },\n        \"update\": {\n          \"x\": {\"field\": \"x\"},\n          \"y\": {\"field\": \"y\"},\n          \"dx\": {\"signal\": \"datum.children ? -7 : 7\"},\n          \"align\": {\"signal\": \"datum.children ? 'right' : 'left'\"}\n        }\n      }\n    }\n  ]\n}\n\nexport default spec;","import {concat, zip, slice, uniq} from 'ramda';\n\nexport interface Vertex {\n  id: number;\n  name: string;\n  parent?: number;\n}\n\nexport type Tree = {\n  tree: Array<Vertex>;\n}\n\nexport function toPairs(chain: string): Array<Array<string>> {\n  const nodes = chain.split(\"->\").map(x => x.trim());\n  return zip(nodes, slice(1, Infinity, nodes));\n}\n\nexport function parse(graph: string): Tree {\n  const nameToId: Record<string, number> = {};\n  let id = -1;\n  const chains = graph\n    .split(\"\\n\")\n    .map(row => row.split(\";\"))\n    .reduce(concat, [])\n    .map(p => p.trim())\n    .filter(p => p !== \"\");\n  const pairs = chains.map(chain => toPairs(chain)).reduce(concat, []);\n  const tree: Array<Vertex> = [];\n  for (const [parent, child] of uniq(pairs)) {\n    let parentId = nameToId[parent];\n    if (parentId === undefined) {\n      nameToId[parent] = parentId = ++id;\n      tree.push({ id: parentId, name: parent });\n    }\n    const childId = ++id;\n    nameToId[child] = childId;\n    tree.push({ id: childId, name: child, parent: parentId });\n  }\n  return { tree };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Grid,\n  Paper,\n  AppBar,\n  Toolbar,\n  Button,\n} from \"@material-ui/core\";\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\nimport { Vega } from \"react-vega\";\nimport { PlainObject } from \"react-vega/lib/types\";\nimport AceEditor from \"react-ace\";\nimport firebase from \"firebase/app\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"firebase/firestore\";\nimport treeSpec from \"./Tree\";\nimport { parse } from \"./parser\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    appBar: {\n      backgroundColor: \"#fff\",\n      color: \"#000\",\n    },\n    saveButton: {\n      marginLeft: theme.spacing(6),\n    },\n    main: {\n      flexGrow: 1,\n      flexDirection: \"row-reverse\",\n      overflow: \"auto\",\n      padding: theme.spacing(1),\n    },\n    pane: {\n      height: \"100%\",\n    },\n    paper: {\n      color: theme.palette.text.secondary,\n      height: \"100%\",\n      overflow: \"auto\",\n    },\n  });\n});\n\n// Initialize Firebase\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAcRmmHUN_Yyqd0al0MSvRz82kIbrHvh-8\",\n  authDomain: \"hierarchy-28591.firebaseapp.com\",\n  databaseURL: \"https://hierarchy-28591.firebaseio.com\",\n  projectId: \"hierarchy-28591\",\n  storageBucket: \"hierarchy-28591.appspot.com\",\n  messagingSenderId: \"761635818549\",\n  appId: \"1:761635818549:web:b6d6fecfd7747c6345f57c\",\n  measurementId: \"G-TJJF0BJ57G\",\n});\nconst firestore = firebase.firestore();\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/:docId\"\n          render={({ match }) => <GraphContainer docId={match.params.docId} />}\n        />\n        <Route path=\"/\" render={() => <GraphContainer docId=\"default\" />} />\n      </Switch>\n    </Router>\n  );\n}\n\ntype GraphContainerProps = {\n  docId: string;\n};\n\nfunction makeid(length: number): string {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction GraphContainer({ docId }: GraphContainerProps) {\n  const [data, setData] = useState(\"\");\n  const [redirect, setRedirect] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchDoc = async () => {\n      const doc = await firestore.collection(\"graphs\").doc(docId).get();\n      const data = doc.data()?.graph;\n      if (!doc.exists || data === null) {\n        setRedirect(\"\");\n      } else {\n        setRedirect(null);\n        setData(data.replace(/\\\\n/gi, \"\\n\"));\n      }\n    };\n    fetchDoc();\n  }, [docId]);\n\n  if (redirect !== null) {\n    return <Redirect to={redirect} />;\n  }\n  return (\n    <Graph\n      data={data}\n      handleChange={setData}\n      handleSave={async (data) => {\n        const id = makeid(6);\n        await firestore.collection(\"graphs\").doc(id).set({ graph: data });\n      }}\n    />\n  );\n}\n\ntype GraphProps = {\n  data: string;\n  handleChange(data: string): void;\n  handleSave(data: string): void;\n};\n\nfunction Graph({ data, handleChange, handleSave }: GraphProps) {\n  const graph = parse(data);\n  const classes = useStyles();\n  const size = graph.tree.length;\n  const margin = size > 200 ? 7 : (235 - size) * 0.2;\n  const height = size * margin;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\">Visualize Hierarchical Data</Typography>\n          <Button\n            className={classes.saveButton}\n            onClick={() => handleSave(data)}\n          >\n            <SaveOutlinedIcon />\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid container spacing={1} className={classes.main}>\n        <Grid item xs={12} md={8} className={classes.pane}>\n          <Paper variant=\"outlined\" className={classes.paper} square>\n            <Vega\n              spec={{ ...treeSpec, height }}\n              data={graph as PlainObject}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} className={classes.pane}>\n          <Paper variant=\"outlined\" className={classes.paper} square>\n            <AceEditor\n              mode=\"plain_text\"\n              placeholder=\"Root -> Parent -> Child;\"\n              theme=\"github\"\n              onChange={(value) => handleChange(value)}\n              value={data}\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}